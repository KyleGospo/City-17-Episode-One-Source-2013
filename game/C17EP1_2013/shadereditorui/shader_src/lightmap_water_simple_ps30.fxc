// ********************************
// ** auto generated pixelshader **
// ********************************

// Includes
#include "common_ps_fxc.h"
#include "common_vertexlitgeneric_dx9.h"
#include "common_lightmappedgeneric_fxc.h"
#include "common_flashlight_fxc.h"
#include "common_parallax.h"


// Combos
// DYNAMIC: "PIXELFOGTYPE"		"0..1"
// DYNAMIC: "FLASHLIGHT"		"0..1"
// DYNAMIC: "FLASHLIGHTDEPTHFILTERMODE"		"0..2"
// DYNAMIC: "FLASHLIGHTSHADOWS"		"0..1"
// DYNAMIC: "WRITEWATERFOGTODESTALPHA"		"0..1"

// Samplers
sampler _Sampler_00		: register( s0 );
sampler _Sampler_01		: register( s1 );
sampler _Sampler_02		: register( s2 );
sampler _Sampler_03		: register( s3 );
sampler _Sampler_04		: register( s4 );
sampler _Sampler_05		: register( s5 );
sampler _Sampler_06		: register( s6 );
sampler _Sampler_07		: register( s7 );
sampler _Sampler_08		: register( s8 );
sampler _Sampler_09		: register( s9 );
sampler _Sampler_10		: register( s10 );
sampler _gSampler_Flashlight_Cookie		: register( s11 );
sampler _gSampler_Flashlight_Depth		: register( s12 );
sampler _gSampler_Flashlight_Random		: register( s13 );

// Constants
const float4x4 g_cFlashlightWorldToTexture		: register( c12 );
const float3 _g_VecOrig		: register( c16 );
const float3 g_cData_envmap_strength		: register( c17 ); 		// Static
const float4 _g_FogParams		: register( c18 );
const float4 g_cFlashlightAttenuationFactors		: register( c8 );
const float4 g_cFlashlightPos		: register( c9 );
const float4 g_cShadowTweaks		: register( c7 );

// Arrays

// Semantic structures
struct PS_INPUT
{
	float4 vTexCoord_0			:	TEXCOORD0;
	float4 vTexCoord_1			:	TEXCOORD1;
	float3 vTexCoord_2			:	TEXCOORD2;
	float3 vTexCoord_3			:	TEXCOORD3;
	float4 vTexCoord_4			:	TEXCOORD4;
	float3 vTexCoord_5			:	TEXCOORD5;
	float3 vTexCoord_6			:	TEXCOORD6;
	float2 vTexCoord_7			:	TEXCOORD7;
	float4 vColor_0				:	COLOR0;
	float4 vColor_1				:	COLOR1;
};

struct PS_OUTPUT
{
	float4 vColor_0				:	COLOR0;
};

// Entry point
PS_OUTPUT main( const PS_INPUT In )
{
	PS_OUTPUT Out;
	float3 _var0 = float3( 0.000000, 0.000000, 0.000000 );
	float2 _var1 = In.vTexCoord_0.xy;
	float2 _var2 = In.vTexCoord_4.zw;
	float _var3 = In.vColor_1.w;
	float2 _var4 = In.vTexCoord_0.zw;
	float2 _var5 = In.vTexCoord_4.xy;
	float2 _var6 = In.vTexCoord_7.xy;
	float3 _var7 = float3( 0.000000, 0.000000, 0.000000 );
	float _var8 = _g_VecOrig.z;
	float _var9 = In.vTexCoord_3.z;
	float _var10 = In.vColor_0.z;
	float4 _texLookup_47 = tex2D( _Sampler_00, _var1 );
	float3 _var11 = _texLookup_47.rgb;
	float _var12 = _texLookup_47.b;
	float3 _var13 = tex2D( _Sampler_01, _var2 ).rgb;
	float4 _texLookup_50 = tex2D( _Sampler_02, _var1 );
	float3 _var14 = _texLookup_50.rgb;
	float _var15 = _texLookup_50.b;
	float3 _var16 = tex2D( _Sampler_03, _var2 ).rgb;
	float4 _texLookup_53 = tex2D( _Sampler_04, _var4 );
	float _var17 = _texLookup_53.r;
	float _var18 = _texLookup_53.g;
	float3 _var19 = tex2D( _Sampler_05, _var1 ).rgb;
	float3 _var20 = tex2D( _Sampler_06, _var6 ).rgb;
	float4 _texLookup_57 = tex2D( _Sampler_07, _var1 );
	float3 _var21 = _texLookup_57.rgb;
	float _var22 = _texLookup_57.g;
	float3 _var23 = tex2D( _Sampler_08, _var6 ).rgb;
	_var8 = CalcPixelFogFactor( PIXELFOGTYPE, _g_FogParams, _var8, _var9, _var10 );
	float2 _var24 = _var11.xy;
	float2 _var25 = _var13.xy;
	float2 _var26 = _var14.xy;
	float2 _var27 = _var16.xy;
	_var17 = min( _var3, _var17 );
	_var18 = max( _var3, _var18 );
	_var20 = smoothstep( float( -0.500000 ), float( 0.700000 ), _var20 );
	_var23 = smoothstep( float( 0.100000 ), float( 0.300000 ), _var23 );
	_var25 = _var25 - float( 0.500000 );
	_var27 = _var27 - float( 0.500000 );
	_var17 = lerp( _var17, _var18, _var3 );
	_var19 = _var19 * _var20;
	_var21 = _var21 * _var23;
	_var24 = _var24 + _var25;
	_var26 = _var26 + _var27;
	_var17 = smoothstep( float( 0.400000 ), float( 0.600000 ), _var17 );
	_var24 = saturate( _var24 );
	_var26 = saturate( _var26 );
	_var19 = lerp( _var19, _var21, _var17 );
	float _var28 = _var22 * _var17;
	float3 _var29 = float3( _var24, _var12 );
	float3 _var30 = float3( _var26, _var15 );
	_var29 = lerp( _var29, _var30, _var17 );
	_var29 = _var29 * float( 2.000000 );
	_var29 = _var29 - float( 1.000000 );
#if ( FLASHLIGHT == 0 )
		float2 _var31 = In.vTexCoord_1.xy;
		float _var32 = dot( _var29, bumpBasis[0] );
		float _var33 = dot( _var29, bumpBasis[1] );
		float _var34 = dot( _var29, bumpBasis[2] );
		float2 _var35 = In.vTexCoord_1.zw;
		float3 _var36 = tex2D( _Sampler_09, _var5 ).rgb;
		float3 _var37 = In.vTexCoord_3 - _g_VecOrig;
		float3 _var38 = lerp( _var29, In.vTexCoord_2, float( 0.900000 ) );
		float3 _var39 = tex2D( _Sampler_09, _var31 ).rgb;
		float2 _var40 = float2( _var32, _var33 );
		float3 _var41 = tex2D( _Sampler_09, _var35 ).rgb;
		_var37 = reflect( _var37, _var38 );
		float3 _var42 = float3( _var40, _var34 );
		float3 _var43 = texCUBE( _Sampler_10, _var37 ).rgb;
		_var42 = saturate( _var42 );
		_var43 = _var43 * float( 0.040000 );
		_var42 = _var42 * _var42;
		_var43 = _var43 * ENV_MAP_SCALE;
		float _var44 = _var42.x;
		float _var45 = _var42.y;
		float _var46 = _var42.z;
		float _var47 = dot( float3( float( 1.000000 ), float( 1.000000 ), float( 1.000000 ) ), _var42 );
		_var43 = _var43 * g_cData_envmap_strength;
		_var39 = _var39 * _var44;
		_var41 = _var41 * _var45;
		_var36 = _var36 * _var46;
		_var47 = LIGHT_MAP_SCALE / _var47;
		_var7 = _var43;
		_var39 = _var39 + _var41;
		_var39 = _var39 + _var36;
		_var39 = _var39 * _var47;
		_var0 = _var39;
#endif
#if ( FLASHLIGHT == 1 )
		float3x3 _var48 = { In.vTexCoord_5,
					In.vTexCoord_6,
					In.vTexCoord_2 };
		float4 _var49 = mul( float4(In.vTexCoord_3.xyz,1), g_cFlashlightWorldToTexture );
		float2 _var50 = In.vColor_0.xy;
		float _var51 = In.vColor_0.w;
		float3 _var52 = mul( _var29, _var48 );
		_var50 = _var50 / _var51;
		_var52 = normalize( _var52 );
		_var50 = _var50 * float( 0.500000 );
		_var50 = _var50 + float( 0.500000 );
		_var52 = DoFlashlight( g_cFlashlightPos.xyz, In.vTexCoord_3, _var49, _var52,
				g_cFlashlightAttenuationFactors.xyz, g_cFlashlightAttenuationFactors.w,
				_gSampler_Flashlight_Cookie, _gSampler_Flashlight_Depth, _gSampler_Flashlight_Random,
				FLASHLIGHTDEPTHFILTERMODE, FLASHLIGHTSHADOWS, true,
				_var50, false, g_cShadowTweaks );
		_var0 = _var52;
#endif
	_var0 = _var0;
	_var7 = _var7 * _var22;
	_var0 = _var0 * _var19;
	_var0 = _var0 + _var7;
	float4 _var53 = float4( _var0.x, _var0.y, _var0.z, 1.000000 );
	_var53 = FinalOutput( _var53, _var8, PIXELFOGTYPE, TONEMAP_SCALE_LINEAR, true, _var10 );
	Out.vColor_0 = _var53;
	return Out;
}