// ********************************
// ** auto generated pixelshader **
// ********************************

// Includes
#include "common_ps_fxc.h"
#include "common_vertexlitgeneric_dx9.h"
#include "common_lightmappedgeneric_fxc.h"
#include "common_flashlight_fxc.h"
#include "common_parallax.h"


// Combos

// Samplers
sampler _Sampler_00		: register( s0 );
sampler _Sampler_01		: register( s1 );

// Constants
const float g_cData_Mutable_03		: register( c16 ); 		// Mutable
const float g_cData_Mutable_01		: register( c17 ); 		// Mutable
const float g_cData_Mutable_02		: register( c18 ); 		// Mutable
const float g_cData_Mutable_04		: register( c19 ); 		// Mutable

// Arrays

// Semantic structures
struct PS_INPUT
{
	float2 vTexCoord_0			:	TEXCOORD0;
};

struct PS_OUTPUT
{
	float4 vColor_0				:	COLOR0;
};

// Entry point
PS_OUTPUT main( const PS_INPUT In )
{
	PS_OUTPUT Out;
	float3 _var0 = tex2D( _Sampler_00, In.vTexCoord_0 ).rgb;
	float _var1 = dot( float3( 0.300000, 0.590000, 0.100000 ), _var0 );
	float3 _var2 = lerp( _var1, _var0, g_cData_Mutable_01 );
	_var2 = lerp( float( 0.500000 ), _var2, g_cData_Mutable_02 );
	_var2 = g_cData_Mutable_03 + _var2;
	float _var3 = _var2.x;
	float _var4 = _var2.y;
	float _var5 = _var2.z;
	float2 _var6 = float2( _var3, float( 0.000000 ) );
	float2 _var7 = float2( _var4, float( 0.000000 ) );
	float2 _var8 = float2( _var5, float( 0.000000 ) );
	_var6 = In.vTexCoord_0 * _var6;
	_var7 = In.vTexCoord_0 * _var7;
	_var8 = In.vTexCoord_0 * _var8;
	float _var9 = tex2D( _Sampler_01, _var6 ).r;
	float _var10 = tex2D( _Sampler_01, _var7 ).g;
	float _var11 = tex2D( _Sampler_01, _var8 ).b;
	float2 _var12 = float2( _var9, _var10 );
	float3 _var13 = float3( _var12, _var11 );
	_var13 = lerp( _var2, _var13, g_cData_Mutable_04 );
	float4 _var14 = float4( _var13.x, _var13.y, _var13.z, 1.000000 );
	Out.vColor_0 = _var14;
	return Out;
}