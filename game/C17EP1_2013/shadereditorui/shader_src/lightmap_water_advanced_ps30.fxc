// ********************************
// ** auto generated pixelshader **
// ********************************

// Includes
#include "common_ps_fxc.h"
#include "common_vertexlitgeneric_dx9.h"
#include "common_lightmappedgeneric_fxc.h"
#include "common_flashlight_fxc.h"
#include "common_parallax.h"


// Combos
// DYNAMIC: "FLASHLIGHT"		"0..1"
// DYNAMIC: "FLASHLIGHTDEPTHFILTERMODE"		"0..2"
// DYNAMIC: "FLASHLIGHTSHADOWS"		"0..1"
// DYNAMIC: "PIXELFOGTYPE"		"0..1"
// DYNAMIC: "WRITEWATERFOGTODESTALPHA"		"0..1"

// Samplers
sampler _Sampler_00		: register( s0 );
sampler _Sampler_01		: register( s1 );
sampler _Sampler_02		: register( s2 );
sampler _gSampler_Flashlight_Cookie		: register( s3 );
sampler _gSampler_Flashlight_Depth		: register( s4 );
sampler _gSampler_Flashlight_Random		: register( s5 );
sampler _Sampler_06		: register( s6 );
sampler _Sampler_07		: register( s7 );
sampler _Sampler_08		: register( s8 );
sampler _Sampler_09		: register( s9 );

// Constants
const float4x4 g_cFlashlightWorldToTexture		: register( c12 );
const float2 g_cData_FlowmapOffset		: register( c16 ); 		// Static
const float4 _g_FogParams		: register( c17 );
const float3 _g_VecOrig		: register( c18 );
const float4 g_cFlashlightAttenuationFactors		: register( c8 );
const float4 g_cFlashlightPos		: register( c9 );
const float4 g_cShadowTweaks		: register( c7 );

// Arrays

// Semantic structures
struct PS_INPUT
{
	float2 vTexCoord_0			:	TEXCOORD0;
	float2 vTexCoord_1			:	TEXCOORD1;
	float3 vTexCoord_2			:	TEXCOORD2;
	float3 vTexCoord_3			:	TEXCOORD3;
	float4 vTexCoord_4			:	TEXCOORD4;
};

struct PS_OUTPUT
{
	float4 vColor_0				:	COLOR0;
};

// Entry point
PS_OUTPUT main( const PS_INPUT In )
{
	PS_OUTPUT Out;
	float3 _var0 = float3( 0.000000, 0.000000, 0.000000 );
	float2 _var1 = In.vTexCoord_4.xy;
	float _var2 = In.vTexCoord_4.w;
	float3 _var3 = tex2D( _Sampler_00, In.vTexCoord_0 ).rgb;
	float _var4 = tex2D( _Sampler_01, In.vTexCoord_0 ).r;
	float _var5 = _g_VecOrig.z;
	float _var6 = In.vTexCoord_3.z;
	float _var7 = In.vTexCoord_4.z;
#if ( FLASHLIGHT == 0 )
		float3 _var8 = tex2D( _Sampler_02, In.vTexCoord_1 ).rgb;
		_var8 = _var8 * LIGHT_MAP_SCALE;
		_var0 = _var8;
#endif
#if ( FLASHLIGHT == 1 )
		float4 _var9 = mul( float4(In.vTexCoord_3.xyz,1), g_cFlashlightWorldToTexture );
		float2 _var10 = In.vTexCoord_4.xy;
		float _var11 = In.vTexCoord_4.w;
		_var10 = _var10 / _var11;
		_var10 = _var10 * float( 0.500000 );
		_var10 = _var10 + float( 0.500000 );
		float3 _var12 = DoFlashlight( g_cFlashlightPos.xyz, In.vTexCoord_3, _var9, In.vTexCoord_2,
				g_cFlashlightAttenuationFactors.xyz, g_cFlashlightAttenuationFactors.w,
				_gSampler_Flashlight_Cookie, _gSampler_Flashlight_Depth, _gSampler_Flashlight_Random,
				FLASHLIGHTDEPTHFILTERMODE, FLASHLIGHTSHADOWS, true,
				_var10, false, g_cShadowTweaks );
		_var0 = _var12;
#endif
	_var0 = _var0;
	_var1 = _var1 / _var2;
	float2 _var13 = _var3.xy;
	_var4 = _var4 * float( 0.500000 );
	_var5 = CalcPixelFogFactor( PIXELFOGTYPE, _g_FogParams, _var5, _var6, _var7 );
	_var1 = _var1 * float2( 0.500000, -0.500000 );
	_var13 = _var13 * float( 2.000000 );
	float2 _var14 = _var4 + g_cData_FlowmapOffset;
	_var1 = _var1 + float( 0.500000 );
	_var13 = _var13 - float( 1.000000 );
	float _var15 = _var14.x;
	float _var16 = _var14.y;
	float2 _var17 = _var13 * _var15;
	float2 _var18 = _var13 * _var16;
	float4 _var19 = tex2D( _Sampler_06, _var1 ).rgba;
	_var17 = In.vTexCoord_0 + _var17;
	_var18 = In.vTexCoord_0 + _var18;
	float3 _var20 = tex2D( _Sampler_07, _var17 ).rgb;
	float3 _var21 = tex2D( _Sampler_08, _var18 ).rgb;
	float2 _var22 = _var20.xy;
	float2 _var23 = _var21.xy;
	_var22 = lerp( _var22, _var23, float( 0.500000 ) );
	_var22 = _var22 * float( 0.250000 );
	_var22 = _var1 + _var22;
	float3 _var24 = tex2D( _Sampler_09, _var22 ).rgb;
	_var0 = _var0 * _var24;
	float4 _var25 = float4( _var24.x, _var24.y, _var24.z, 1.000000 );
	_var25 = FinalOutput( _var25, _var5, PIXELFOGTYPE, TONEMAP_SCALE_LINEAR, true, _var7 );
	Out.vColor_0 = _var25;
	return Out;
}