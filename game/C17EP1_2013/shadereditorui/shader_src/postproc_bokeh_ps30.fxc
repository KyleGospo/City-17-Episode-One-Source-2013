// ********************************
// ** auto generated pixelshader **
// ********************************


// Includes
#include "common_ps_fxc.h"
#include "common_vertexlitgeneric_dx9.h"
#include "common_lightmappedgeneric_fxc.h"
#include "common_flashlight_fxc.h"
#include "common_parallax.h"


// Samplers
sampler _Sampler_00		: register( s0 );
sampler _Sampler_01		: register( s1 );

// Constants
const float2 _g_TexelSize		: register( c16 );

// Arrays
static const float g_cArray_1912[5] =
{
	float( 0.054489f ),
	float( 0.244201f ),
	float( 0.402620f ),
	float( 0.244201f ),
	float( 0.054489f ),
};

// Semantic structures
struct PS_INPUT
{
	float2 vTexCoord_0			:	TEXCOORD0;
};

struct PS_OUTPUT
{
	float4 vColor_0				:	COLOR0;
};

// Entry point
PS_OUTPUT main( const PS_INPUT In )
{
	PS_OUTPUT Out;
	float4 _var0 = float4( 0.000000, 0.000000, 0.000000, 0.000000 );
	float _var1 = tex2D( _Sampler_00, In.vTexCoord_0 ).a;
	float2 _var2 = _var1 * _g_TexelSize;
	float2 _var3 = _var1 * _g_TexelSize;
	_var2 = In.vTexCoord_0 - _var2;
	for ( int _var4 = 0; _var4 < 5; _var4++ )
	{
		_var2 = _var2 + _var3;
		float4 _texLookup_12 = tex2D( _Sampler_01, _var2 );
		float3 _var5 = _texLookup_12.rgb;
		float _var6 = _texLookup_12.a;
		_var6 = ceil( _var6 );
		float4 _var7 = float4( _var5, _var6 );
		_var7 = _var7 * g_cArray_1912[_var4];
		_var0 = _var0 + _var7;
	}
	Out.vColor_0 = _var0;
	return Out;
}