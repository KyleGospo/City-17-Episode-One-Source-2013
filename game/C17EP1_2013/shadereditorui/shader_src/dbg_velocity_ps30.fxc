// ********************************
// ** auto generated pixelshader **
// ********************************

// Includes
#include "common_ps_fxc.h"
#include "common_vertexlitgeneric_dx9.h"
#include "common_lightmappedgeneric_fxc.h"
#include "common_flashlight_fxc.h"


// Combos

// Samplers
sampler _Sampler_00		: register( s0 );
sampler _Sampler_01		: register( s1 );
sampler _Sampler_02		: register( s2 );

// Constants
const float4 g_cData_local_player_velocity		: register( c0 ); 		// Callback
const float _g_Time		: register( c1 );

// Semantic structures
struct PS_INPUT
{
	float2 vTexCoord_0			:	TEXCOORD0;
	float2 vTexCoord_1			:	TEXCOORD1;
	float4 vColor_0				:	COLOR0;
};

struct PS_OUTPUT
{
	float4 vColor_0				:	COLOR0;
};

// Entry point
PS_OUTPUT main( const PS_INPUT In )
{
	PS_OUTPUT Out;
	float3 _var0 = g_cData_local_player_velocity.xyz;
	float3 _var1 = tex2D( _Sampler_00, In.vTexCoord_1 ).rgb;
	float _var2 = _g_Time * float( 0.800000 );
	float _var3 = In.vColor_0.w;
	_var0 = _var0 * float( 0.500000 );
	float2 _var4 = In.vTexCoord_0 - _var2;
	float2 _var5 = In.vTexCoord_0 + _var2;
	_var0 = _var0 + float( 0.500000 );
	float3 _var6 = tex2D( _Sampler_01, _var4 ).rgb;
	float3 _var7 = tex2D( _Sampler_02, _var5 ).rgb;
	_var0 = _var0 * _var1;
	_var6 = lerp( _var6, _var7, _var3 );
	_var0 = _var0 * LIGHT_MAP_SCALE;
	_var6 = _var6 * float( 2.000000 );
	_var0 = _var0 * _var6;
	float4 _var8 = float4( _var0.x, _var0.y, _var0.z, 1.000000 );
	Out.vColor_0 = _var8;
	return Out;
}