// ********************************
// ** auto generated pixelshader **
// ********************************

// Includes
#include "common_ps_fxc.h"
#include "common_vertexlitgeneric_dx9.h"
#include "common_lightmappedgeneric_fxc.h"
#include "common_flashlight_fxc.h"
#include "common_parallax.h"


// Combos

// Samplers
sampler _Sampler_00		: register( s0 );
sampler _Sampler_01		: register( s1 );
sampler _Sampler_02		: register( s2 );
sampler _Sampler_03		: register( s3 );
sampler _Sampler_04		: register( s4 );
sampler _Sampler_05		: register( s5 );
sampler _Sampler_06		: register( s6 );
sampler _Sampler_07		: register( s7 );

// Constants
const float g_cData_refraction_distortpower		: register( c16 ); 		// Static
const float _g_Time		: register( c17 );
const float2 g_cData_refraction_scroll		: register( c18 ); 		// Static
const float2 g_cData_refraction_distort_direction		: register( c19 ); 		// Static
const float g_cData_refraction_variationblendamount		: register( c20 ); 		// Static
const float4x4 g_cCMatrix_ViewProj		: register( c21 );
const float3 g_cData_envmap_strength		: register( c25 ); 		// Static

// Arrays

// Semantic structures
struct PS_INPUT
{
	float2 vTexCoord_0			:	TEXCOORD0;
	float3 vTexCoord_1			:	TEXCOORD1;
	float3 vTexCoord_2			:	TEXCOORD2;
	float4 vTexCoord_3			:	TEXCOORD3;
	float3 vTexCoord_4			:	TEXCOORD4;
	float3 vTexCoord_5			:	TEXCOORD5;
};

struct PS_OUTPUT
{
	float4 vColor_0				:	COLOR0;
};

// Entry point
PS_OUTPUT main( const PS_INPUT In )
{
	PS_OUTPUT Out;
	float4 _texLookup_34 = tex2D( _Sampler_00, In.vTexCoord_0 );
	float _var0 = _texLookup_34.r;
	float _var1 = _texLookup_34.g;
	float _var2 = _texLookup_34.b;
	float2 _var3 = _g_Time * g_cData_refraction_scroll;
	float2 _var4 = _g_Time * g_cData_refraction_distort_direction;
	float3x3 _var5 = { In.vTexCoord_4,
				In.vTexCoord_5,
				In.vTexCoord_1 };
	float3 _var6 = normalize( In.vTexCoord_2 );
	float2 _var7 = In.vTexCoord_3.xy;
	float _var8 = In.vTexCoord_3.w;
	float4 _texLookup_43 = tex2D( _Sampler_01, In.vTexCoord_0 );
	float _var9 = _texLookup_43.r;
	float _var10 = _texLookup_43.g;
	float _var11 = _texLookup_43.b;
	float _var12 = tex2D( _Sampler_02, In.vTexCoord_0 ).r;
	float2 _var13 = float2( _var0, _var2 );
	{
		float2 center_def = float2( 0.5f, 0.5f );
		float rot_def = float( 0.0f );
		float2 scale_def = float2( 1.0f, 1.0f );
		float fs = sin( rot_def );
		float fc = cos( rot_def );
		float4 row_0 = float4( fc * scale_def.x, -fs * scale_def.x, 0, ( -center_def.x * fc + center_def.y * fs ) * scale_def.x + center_def.x + _var4.x );
		float4 row_1 = float4( fs * scale_def.y, fc * scale_def.y, 0, ( -center_def.x * fs - center_def.y * fc ) * scale_def.y + center_def.y + _var4.y );
		_var4.x = dot( float4( In.vTexCoord_0, 0, 1 ), row_0 );
		_var4.y = dot( float4( In.vTexCoord_0, 0, 1 ), row_1 );
	}
	_var7 = _var7 / _var8;
	_var13 = float( 1.100000 ) * _var13;
	float _var14 = tex2D( _Sampler_03, _var4 ).g;
	_var7 = _var7 * float2( 0.500000, -0.500000 );
	_var13 = _var13 * g_cData_refraction_distortpower;
	_var14 = _var14 * _var1;
	_var7 = _var7 + float( 0.500000 );
	_var13 = In.vTexCoord_0 + _var13;
	_var14 = _var14 * float( 0.250000 );
	float2 _var15 = _var9 * _var7;
	{
		float2 center_def = float2( 0.5f, 0.5f );
		float rot_def = float( 0.0f );
		float2 scale_def = float2( 1.0f, 1.0f );
		float fs = sin( rot_def );
		float fc = cos( rot_def );
		float4 row_0 = float4( fc * scale_def.x, -fs * scale_def.x, 0, ( -center_def.x * fc + center_def.y * fs ) * scale_def.x + center_def.x + _var3.x );
		float4 row_1 = float4( fs * scale_def.y, fc * scale_def.y, 0, ( -center_def.x * fs - center_def.y * fc ) * scale_def.y + center_def.y + _var3.y );
		_var13.x = dot( float4( _var13, 0, 1 ), row_0 );
		_var13.y = dot( float4( _var13, 0, 1 ), row_1 );
	}
	float2 _var16 = In.vTexCoord_0 + _var14;
	_var15 = _var15 * _var11;
	float4 _texLookup_62 = tex2D( _Sampler_04, _var13 );
	float3 _var17 = _texLookup_62.rgb;
	float _var18 = _texLookup_62.r;
	float _var19 = _texLookup_62.b;
	{
		float2 center_def = float2( 0.5f, 0.5f );
		float rot_def = float( 0.0f );
		float2 scale_def = float2( 1.0f, 1.0f );
		float2 trans_def = float2( 0.0f, 0.0f );
		float fs = sin( rot_def );
		float fc = cos( rot_def );
		float4 row_0 = float4( fc * scale_def.x, -fs * scale_def.x, 0, ( -center_def.x * fc + center_def.y * fs ) * scale_def.x + center_def.x + trans_def.x );
		float4 row_1 = float4( fs * scale_def.y, fc * scale_def.y, 0, ( -center_def.x * fs - center_def.y * fc ) * scale_def.y + center_def.y + trans_def.y );
		_var16.x = dot( float4( _var16, 0, 1 ), row_0 );
		_var16.y = dot( float4( _var16, 0, 1 ), row_1 );
	}
	_var15 = _var10 - _var15;
	float _var20 = tex2D( _Sampler_05, _var16 ).r;
	float2 _var21 = float2( _var18, _var20 );
	float3 _var22 = float3( _var21, _var19 );
	_var17 = lerp( _var17, _var22, g_cData_refraction_variationblendamount );
	_var17 = _var17 * float( 2.000000 );
	_var17 = _var17 - float( 1.000000 );
	_var17 = mul( _var17, _var5 );
	_var17 = normalize( _var17 );
	float _var23 = dot( _var17, _var6 );
	float3 _var24 = mul( float4(_var17.xyz,1), (float3x3)g_cCMatrix_ViewProj );
	float3 _var25 = reflect( _var6, _var17 );
	float _var26 = smoothstep( float( -1.000000 ), float( -0.500000 ), _var23 );
	float _var27 = smoothstep( float( 0.100000 ), float( -0.500000 ), _var23 );
	float2 _var28 = _var24.xy;
	float _var29 = smoothstep( float( -0.050000 ), float( -0.100000 ), _var23 );
	float _var30 = abs( _var23 );
	float3 _var31 = texCUBE( _Sampler_06, _var25 ).rgb;
	_var26 = min( _var26, _var27 );
	_var28 = _var28 * _var29;
	_var30 = 1.0f - _var30;
	_var31 = _var31 * ENV_MAP_SCALE;
	_var28 = _var28 * float2( 1.100000, -1.000000 );
	_var30 = _var30 * float( 0.100000 );
	_var31 = _var31 * _var12;
	float _var32 = float( 0.550000 ) + _var30;
	float _var33 = float( 0.400000 ) + _var30;
	float _var34 = float( 0.500000 ) + _var30;
	_var31 = _var31 * g_cData_envmap_strength;
	float2 _var35 = _var28 * _var32;
	float2 _var36 = _var28 * _var33;
	float2 _var37 = _var28 * _var34;
	_var35 = _var7 - _var35;
	_var36 = _var15 - _var36;
	_var37 = _var15 - _var37;
	float _var38 = tex2D( _Sampler_07, _var35 ).r;
	float _var39 = tex2D( _Sampler_07, _var36 ).g;
	float _var40 = tex2D( _Sampler_07, _var37 ).b;
	_var38 = _var38 * float( 1.500000 );
	_var40 = _var40 * float( 1.100000 );
	float2 _var41 = float2( _var38, _var39 );
	float3 _var42 = float3( _var41, _var40 );
	_var42 = _var42 * _var31;
	_var42 = _var26 * _var42;
	float4 _var43 = float4( _var42, float( 1.000000 ) );
	_var43 = _var43 * float( 2.200000 );
	Out.vColor_0 = _var43;
	return Out;
}